<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>

	<!-- 定义受环境影响易变的变量 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<value>classpath*:/mail.properties</value>
				<value>classpath*:/velocity.properties</value>				
				<!-- 本地开发环境配置 -->
				<!-- value>classpath*:/application.local.properties</value -->
				<!-- 服务器生产环境配置 -->
				<!-- value>file:/var/fire/application.server.properties</value -->
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:component-scan base-package="com.zhenjinzi.yzy" />
	
	<!-- 邮件服务配置
	<bean id="mailService" class="com.zhenjinzi.yzy.service.impl.ZunmiMailServiceImpl"
		p:path="${velocity.file.resource.loader.path}" p:fromAddress="${mail.from.address}" p:fromName="${mail.from.name}" p:saveToImap="true">
		<property name="mailSender">
			<bean class="org.springframework.mail.javamail.JavaMailSenderImpl"
				p:host="${mail.smtp.host}" p:port="${mail.smtp.port}"
				p:username="${mail.username}" p:password="${mail.password}"
				p:protocol="${mail.smtp.protocol}" p:defaultEncoding="${mail.encoding}">
				<property name="javaMailProperties">
					<props>
						<prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
						<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
						<prop key="mail.smtp.starttls.enable">${mail.smtp.starttls.enable}</prop>
					</props>
				</property>
			</bean>
		</property>
 
		<property name="imapProperties">
			<props>
				<prop key="mail.imap.host">${mail.imap.host}</prop>
				<prop key="mail.imap.port">${mail.imap.port}</prop>
				<prop key="mail.imap.starttls.enable">${mail.imap.starttls.enable}</prop>
				<prop key="mail.imap.timeout">${mail.imap.timeout}</prop>
				<prop key="mail.username">${mail.username}</prop>
				<prop key="mail.password">${mail.password}</prop>
				<prop key="mail.imap.folder">${mail.imap.folder}</prop>
			</props>
		</property>

		<property name="velocityEngine">
			<bean class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
				<property name="velocityProperties">
					<props>
						<prop key="input.encoding">${velocity.input.encoding}</prop>
						<prop key="resource.loader">${velocity.resource.loader}</prop>
						<prop key="file.resource.loader.description">${velocity.file.resource.loader.description}</prop>
						<prop key="file.resource.loader.class">${velocity.file.resource.loader.class}</prop>
						<prop key="file.resource.loader.path">${zunmi.root}${velocity.file.resource.loader.path}</prop>						
						<prop key="file.resource.loader.cache">${velocity.file.resource.loader.cache}</prop>
						<prop key="file.resource.loader.modificationCheckInterval">${velocity.file.resource.loader.modificationCheckInterval}</prop>
					</props>
				</property>
			</bean>
		</property>
	</bean>
	-->
	<!-- 支付宝 -->
	<bean id="alipayPayment" class="com.zhenjinzi.yzy.vo.AlipayPayment"
		p:partner="208850"
		p:key="uvw6pckzseznk714t9jv9mtmt3ub8e08"
		p:body="方便，安全，快捷"
		p:subject="预付费"
		p:showUrl="www.zi.com"
		p:discount="0.00"
		p:returnUrl="http://11.165.22"
		p:paymentType="1" 
		p:sellerEmail="pazun.com"
		p:inputCharset="utf-8"
		p:notifyUrl="http://118.19alipayNotify.action"
		p:notifyVerifyUrl="https://mapi.alipay.com/gateway.do?service=notify_verify&amp;"
		p:paygateway="https://mapi.alipay.com/gateway.do?"
		p:service="create_direct_pay_by_user"
		p:signType="MD5" />
	<!-- 网银在线 -->
	<bean id="chinaBankPayment" class="com.zhenjinzi.yzy.vo.ChinaBankPayment"
		p:vid="20821820"
		p:key="WangZun-1121_!!@!"
		p:vurl="http://118.194.165.22/user/deposit!chinaBankNotify.action" 
		p:remark1="方便，安全，快捷" 
		p:remark2="预付费" 
		p:paygateway="https://pay3.chinabank.com.cn/select_bank" />
		
	<!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="true"/>
	</bean>

	<!-- Hibernate配置 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
		<property name="packagesToScan" value="com.zhenjinzi.yzy.model" />
		<property name="eventListeners">
			<map>
				<entry key="save-update">
					<list>
						<bean class="org.hibernate.event.def.DefaultSaveOrUpdateEventListener" />
					</list>
				</entry>
			</map>
		</property>
	</bean>

	<!-- 事务管理器配置, Hibernate单数据源事务 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	
</beans>